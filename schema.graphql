# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
}

"Requires that exactly one field must be supplied and that field must not be `null`."
directive @oneOf on INPUT_OBJECT

type Amenity {
  amenitableId: ID!
  amenitableType: String!
  atDetails: String
  atType: String
  id: ID!
  satDetails: String
  satType: String
}

"Autogenerated return type of ApproveTenant."
type ApproveTenantPayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  status: Boolean
}

type Attachment {
  attachableId: ID!
  attachableType: String!
  category: String!
  fileContentType: String!
  fileName: String
  fileSize: Int!
  id: ID!
  url: String!
  user: User
  userId: ID
}

"Autogenerated return type of ConfirmMaintenance."
type ConfirmMaintenancePayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  status: Boolean
}

"Autogenerated return type of CreateAttachment."
type CreateAttachmentPayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  fileObject: Attachment
}

"Autogenerated return type of CreateMaintenance."
type CreateMaintenancePayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  maintenance: Maintenance
}

"Autogenerated return type of CreateProperty."
type CreatePropertyPayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  property: Property!
}

"Autogenerated return type of CreateTenant."
type CreateTenantPayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  tenant: Tenant
}

"Autogenerated return type of DeclineTenant."
type DeclineTenantPayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  status: Boolean
}

"Autogenerated return type of FinishMaintenance."
type FinishMaintenancePayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  status: Boolean
}

"Autogenerated return type of InterviewTenant."
type InterviewTenantPayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  status: Boolean!
}

type Maintenance {
  descriptions: String
  id: ID!
  priority: String
  property: Property
  propertyId: ID
  requestDate: ISO8601DateTime
  requestTitle: String
  requestType: String
  state: String
  tenant: Tenant
  tenantId: ID
}

type Mutation {
  acceptTenant(
    "Parameters for ApproveTenant"
    input: ApproveTenantInput!
  ): ApproveTenantPayload
  confirmMaintenance(
    "Parameters for ConfirmMaintenance"
    input: ConfirmMaintenanceInput!
  ): ConfirmMaintenancePayload
  createAttachment(
    "Parameters for CreateAttachment"
    input: CreateAttachmentInput!
  ): CreateAttachmentPayload
  createMaintenance(
    "Parameters for CreateMaintenance"
    input: CreateMaintenanceInput!
  ): CreateMaintenancePayload
  createProperty(
    "Parameters for CreateProperty"
    input: CreatePropertyInput!
  ): CreatePropertyPayload
  createTenant(
    "Parameters for CreateTenant"
    input: CreateTenantInput!
  ): CreateTenantPayload
  declineTenant(
    "Parameters for DeclineTenant"
    input: DeclineTenantInput!
  ): DeclineTenantPayload
  finishMaintenance(
    "Parameters for FinishMaintenance"
    input: FinishMaintenanceInput!
  ): FinishMaintenancePayload
  interviewTenant(
    "Parameters for InterviewTenant"
    input: InterviewTenantInput!
  ): InterviewTenantPayload
  onHoldMaintenance(
    "Parameters for OnHoldMaintenance"
    input: OnHoldMaintenanceInput!
  ): OnHoldMaintenancePayload
  updateProperty(
    "Parameters for UpdateProperty"
    input: UpdatePropertyInput!
  ): UpdatePropertyPayload
  updateUser(
    "Parameters for UpdateUser"
    input: UpdateUserInput!
  ): UpdateUserPayload
  workMaintenance(
    "Parameters for WorkMaintenance"
    input: WorkMaintenanceInput!
  ): WorkMaintenancePayload
}

"Autogenerated return type of OnHoldMaintenance."
type OnHoldMaintenancePayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  status: Boolean
}

type PortalSetting {
  businessName: String!
  dzongkhag: String
  gewog: String
  id: ID!
  themeColour: String
}

type Profile {
  fullName: String!
  gender: String
  id: ID!
  phone: String
}

type Property {
  allOccupied: String!
  attachments: [Attachment!]
  id: ID!
  lat: String
  lng: String
  neighbourhoodDetails: String
  normalAmenities: [Amenity!]
  occupancyType: String
  owner: User
  propertyDescription: String
  propertyName: String
  propertyType: String
  specialAmenities: [Amenity!]
  units: [Unit!]
  unitsCount: Int
  uploadAs: String!
}

type Query {
  maintenances(attributes: MaintenanceFilterAttributes): [Maintenance!]!
  properties(attributes: PropertiesFilterAttributes): [Property!]!
  property(id: ID): Property!
  tenant(id: ID): Tenant!
  tenants(attributes: TenantFilterAttributes): [Tenant!]!
  unit(id: ID): Unit!
  units(attributes: UnitFilterAttributes): [Unit!]!
  user(id: ID): User!
  users(params: UserFilterAttributes): [User!]!
}

type Role {
  id: ID!
  roleName: String!
}

type SubscriptionPlan {
  id: ID!
  name: String!
}

type Tenant {
  applicationDetail: String
  applicationTitle: String
  cid: String!
  currentEmployer: String
  familyComposition: String
  id: ID!
  movedInDate: ISO8601Date
  pets: Boolean
  preferMoveInDate: ISO8601Date
  property: Property!
  propertyId: ID!
  state: String!
  unit: Unit!
  unitId: ID!
  user: User!
  userId: ID!
}

type Unit {
  attachments: [Attachment!]!
  currentUserTenant: [Tenant!]
  id: ID!
  monthlyRent: Int!
  normalAmenities: [Amenity!]!
  nosOfApplicants: Int
  nosOfBath: Int
  nosOfBed: Int
  occupied: Boolean!
  property: Property!
  propertyId: ID!
  unitDescription: String!
  unitNumber: String
}

"Autogenerated return type of UpdateProperty."
type UpdatePropertyPayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  property: Property!
}

"Autogenerated return type of UpdateUser."
type UpdateUserPayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  user: User!
}

type User {
  email: String!
  enabled: Boolean
  id: ID!
  portalSetting: PortalSetting
  profile: Profile
  profileBackground: Attachment
  profilePic: Attachment
  property: Property
  role: Role!
  status: String
  subscriptionPlan: SubscriptionPlan
  tenant: Tenant
}

"Autogenerated return type of WorkMaintenance."
type WorkMaintenancePayload {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  status: Boolean
}

enum CategoryEnum {
  avatar
  avatar_background
  logo
  misc_files
  property
  unit
}

enum GenderEnum {
  female
  male
  unknown
}

enum MaintenanceStateEnum {
  completed
  in_progress
  on_hold
  open
}

enum NameEnum {
  free_trial
  golden
  silver
}

enum OccupancyTypeEnum {
  multi_family_home
  single_family_home
}

enum PriorityEnum {
  high
  low
  medium
}

enum PropertyTypeEnum {
  modern_building
  traditional_house
}

enum RequestTypeEnum {
  immediate
  planned
}

enum SalutationEnum {
  Mr
  Mrs
}

enum SatTypeEnum {
  lift
  swimming_pool
}

enum StateEnum {
  accepted
  declined
  interviewing
  received
}

enum StatusEnum {
  active
  inactive
}

enum ThemeColourEnum {
  green
  pink
  red
}

enum UploadAsEnum {
  exchange
  owner
}

"A valid URL, transported as a string"
scalar File

"An ISO 8601-encoded date"
scalar ISO8601Date

"An ISO 8601-encoded datetime"
scalar ISO8601DateTime

input AmenityAttributes {
  _destroy: Int
  amenitableId: ID
  amenitableType: String
  atDetails: String
  "Amenities Types are usually vast, so making it enum does not makes sense "
  atType: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID
  limitPerPage: Int
  offsetPage: Int
  query: String
  "usually the numbers, ex: if sat_type is swimming pool, sat_details will be 2"
  satDetails: String
  satType: SatTypeEnum
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  type: String
}

"Autogenerated input type of ApproveTenant"
input ApproveTenantInput {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID!
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

input AttachmentAttributes {
  _destroy: Int
  attachableId: Int
  attachableType: String
  category: CategoryEnum!
  "Default: asc, options: [:asc, :desc]"
  direction: String
  file: File!
  fileFileName: String!
  id: ID
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  userId: ID
}

"Autogenerated input type of ConfirmMaintenance"
input ConfirmMaintenanceInput {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID!
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

"Autogenerated input type of CreateAttachment"
input CreateAttachmentInput {
  attributes: AttachmentAttributes!
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

"Autogenerated input type of CreateMaintenance"
input CreateMaintenanceInput {
  attributes: MaintenanceAttributes!
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

"Autogenerated input type of CreateProperty"
input CreatePropertyInput {
  attributes: PropertyAttributes!
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

"Autogenerated input type of CreateTenant"
input CreateTenantInput {
  attributes: TenantAttributes!
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

"Autogenerated input type of DeclineTenant"
input DeclineTenantInput {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID!
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

"Autogenerated input type of FinishMaintenance"
input FinishMaintenanceInput {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID!
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

"Autogenerated input type of InterviewTenant"
input InterviewTenantInput {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID!
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

input MaintenanceAttributes {
  _destroy: Int
  descriptions: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID
  limitPerPage: Int
  offsetPage: Int
  priority: PriorityEnum
  propertyId: ID
  query: String
  requestDate: ISO8601DateTime
  requestTitle: String!
  requestType: RequestTypeEnum
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  state: MaintenanceStateEnum
  tenantId: ID
}

input MaintenanceFilterAttributes {
  "Default: asc, options: [:asc, :desc]"
  direction: String
  limitPerPage: Int
  offsetPage: Int
  propertyId: ID
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  tenantId: ID
}

"Autogenerated input type of OnHoldMaintenance"
input OnHoldMaintenanceInput {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID!
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

input PortalSettingAttributes {
  _destroy: Int
  businessName: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  dzongkhag: String
  gewog: String
  id: ID
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  themeColour: ThemeColourEnum
}

input ProfileAttributes {
  _destroy: Int
  "Default: asc, options: [:asc, :desc]"
  direction: String
  fullName: String
  gender: GenderEnum
  id: ID
  limitPerPage: Int
  offsetPage: Int
  phone: String
  query: String
  salutation: SalutationEnum
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

input PropertiesFilterAttributes {
  "Default: asc, options: [:asc, :desc]"
  direction: String
  limitPerPage: Int
  occupancyType: OccupancyTypeEnum
  offsetPage: Int
  propertyType: PropertyTypeEnum
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  uploadAs: UploadAsEnum
}

input PropertyAttributes {
  _destroy: Int
  attachments: [AttachmentAttributes!]
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID
  lat: String
  limitPerPage: Int
  lng: String
  neighbourhoodDetails: String
  normalAmenities: [AmenityAttributes!]
  occupancyType: OccupancyTypeEnum
  offsetPage: Int
  ownerId: ID!
  propertyDescription: String
  propertyName: String!
  propertyType: PropertyTypeEnum
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  specialAmenities: [AmenityAttributes!]
  units: [UnitAttributes!]
  uploadAs: UploadAsEnum
}

input SubscriptionPlanAttributes {
  _destroy: Int
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID
  limitPerPage: Int
  name: NameEnum
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

input TenantAttributes {
  applicationDetail: String
  applicationTitle: String
  cid: String
  currentEmployer: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  familyComposition: String
  id: ID
  limitPerPage: Int
  movedInDate: ISO8601Date
  offsetPage: Int
  pets: Boolean
  preferMoveInDate: ISO8601Date
  propertyId: ID
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  "Not Needed during first Creation Process"
  state: StateEnum
  unitId: ID
  userId: ID
}

input TenantFilterAttributes {
  "Default: asc, options: [:asc, :desc]"
  direction: String
  limitPerPage: Int
  offsetPage: Int
  propertyId: ID
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  state: StateEnum
}

input UnitAttributes {
  _destroy: Int
  attachments: [AttachmentAttributes!]
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID
  limitPerPage: Int
  monthlyRent: Int
  normalAmenities: [AmenityAttributes!]
  nosOfBath: Int
  nosOfBed: Int
  occupied: Boolean
  offsetPage: Int
  propertyId: ID
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  unitDescription: String
  unitNumber: String
}

input UnitFilterAttributes {
  "Default: asc, options: [:asc, :desc]"
  direction: String
  lat: String
  limitPerPage: Int
  lng: String
  occupancyType: OccupancyTypeEnum
  offsetPage: Int
  price: Int
  propertyType: PropertyTypeEnum
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

"Autogenerated input type of UpdateProperty"
input UpdatePropertyInput {
  attributes: PropertyAttributes!
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

"Autogenerated input type of UpdateUser"
input UpdateUserInput {
  attributes: UserAttributes!
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}

input UserAttributes {
  _destroy: Int
  "Default: asc, options: [:asc, :desc]"
  direction: String
  enabled: Boolean
  id: ID
  limitPerPage: Int
  offsetPage: Int
  portalSetting: PortalSettingAttributes
  profile: ProfileAttributes
  query: String
  roleId: ID
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  status: StatusEnum
  subscriptionPlan: SubscriptionPlanAttributes
}

input UserFilterAttributes {
  "Default: asc, options: [:asc, :desc]"
  direction: String
  enabled: Boolean
  limitPerPage: Int
  offsetPage: Int
  query: String
  roleId: ID
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
  status: StatusEnum
}

"Autogenerated input type of WorkMaintenance"
input WorkMaintenanceInput {
  "A unique identifier for the client performing the mutation."
  clientMutationId: String
  "Default: asc, options: [:asc, :desc]"
  direction: String
  id: ID!
  limitPerPage: Int
  offsetPage: Int
  query: String
  "Note ~> Confirm with Backend For Correct Params"
  sort: String
}
